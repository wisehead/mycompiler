语法分析

1.文法
3型文法（正则文法）描述了正则语言，前面讨论的词法记号属于3型文法，使用有限自动机可以完成正则语言的识别。
2型文法（上下文无关文法）描述了程序设计语言。

2.LL（1）文法，
要求比LR更严格，不允许文法中的产生式出现左公因子和左递归，因此构造LL（1）文法时，需要避免出现左公因子和左递归。
虽然LR分析对文法的要求比较宽松，但是LR分析器收工构造较为复杂。
鉴于LL（1）文法足以描述本文所实现的语言，本书采用LL（1）分析器分析自定义语言的文法。主流的编译器GCC也是使用LL分析器完成C语言的语法分析，过不GCC使用的是LL（2）分析算法。

3.C语言程序一般由变量声明，变量定义，函数声明，函数定义组合而成。

4.在语法分析过程中难以或者无法解决的问题，可以由语义分析来辅助解决。

5.构造保持运算符优先级特性的文法的方法是：将高优先级运算符形成的表达式整体作为低优先级运算符形成的表达式的操作数。

6.递归下降子程序构造规则：
（1）文法中的每一个非终结符对应一个子程序（函数）
（2）文法中的每个产生式对应子程序内的一个分支。
（3）产生式中的非终结符转化为对应子程序的调用。
（4）产生式中的终结符与当前读入的词法记号进行匹配。
（5）终结符与当前读入的词法记号匹配失败时，需要报告语法错误，并进行相应的错误修复。
（6）产生式处理时，需要执行当前子程序分支相关的语义动作，比如符号表管理，语义分析和代码生成。

7.当产生式为空终结符时，使用产生式左侧的非空终结符的FOLLOW集合作为产生式的条件。

非终结符<program>表示整个源程序，其FOLLOW集合只包含一个非终结符————文件结束符词法记号END。
当遇到终结符END时，program子程序推出，停止右递归过程。

8.FIRST(Bi+1...Bn)的定义为：
（1）如果Bi+1不能推导出空终结符e，则FIRST（Bi+1...Bn）= FIRST(Bi+1)
（2）如果Bi+1能推导出空终结符e，则FIRST（Bi+1...Bn）= (FIRST(Bi+1) - {e}) union FIRST(Bi+2...Bn)
（3）对于FIRST(Bn),如果Bn能推导出空终结符e，则FIRST(Bn) = (FIRST(Bn) - {e}) union FOLLOW(A)


